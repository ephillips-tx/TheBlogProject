@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using TheBlogProject.Services
@using Microsoft.AspNetCore.Html
@using static System.Text.Encodings.Web.HtmlEncoder

@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@model IPagedList<Post>

@{
    var htmlBuilder = new HtmlContentBuilder();
    htmlBuilder.AppendFormat("{1}  <ins><span class='text-danger' id='searchString'><em>{0}</em></span></ins>", ViewData["SearchTerm"], "You searched for:  ");

    ViewData["Title"] = "Search Results";
    ViewData["headerContent"] = "Search Results";
    ViewData["headerSubContent"] = htmlBuilder;
}

<div class="row">
    @foreach(var post in Model)
    {
        <div class="col-sm-2 col-lg-4 mt-3">
            <div class="card border-dark">
                <div class="card-body text-center">
                    <div class="bg-warning">
                        <hr>
                        <h5 class="card-title">@post.Title</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text">@post.Abstract</p>
                    </div>
                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                    </div>
                </div>
                <img class="card-img-bottom" src="@imageService.DecodeImage(post.ImageData, post.ContentType)" />
            </div>
        </div>
    }
</div>


<hr />

@*Add paging controls here*@
 <div class="container">
     <div class="row">
         <div class="col h3">
             Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
         </div>
     </div>
     <div class="row">
         <div class="col">
             @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchTerm = ViewData["SearchTerm"] }), 
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
         </div>
     </div>
</div>