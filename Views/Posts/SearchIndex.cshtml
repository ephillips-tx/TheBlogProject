@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using Microsoft.AspNetCore.Html
@using static System.Text.Encodings.Web.HtmlEncoder

@inject UserManager<BlogUser> _userManager
@inject IImageService _imageService

@model IPagedList<Post>

@{
    var htmlBuilder = new HtmlContentBuilder();
    htmlBuilder.AppendFormat("{1}  <ins><span class='text-danger' id='searchString'><em>{0}</em></span></ins>", ViewData["SearchTerm"], "You searched for:  ");

    ViewData["headerSubContent"] = htmlBuilder;
}

<div class="row">
    <div class="col-12 col-lg-9">
        <div class="row">
            @foreach(var post in Model)
            {
                // Is the logged in user the Author of this post? 
                var isAuthor = false;
                if (User.Identity.IsAuthenticated)
                {
                    isAuthor = (post.BlogUserId == _userManager.GetUserId(User));
                }

                <div class="col-12 col-lg-4 mt-3">
                    <div class="card h-100 border-dark">
                        <div class="card-body text-center">
                            <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">
                                <div class="bg-danger media-border rounded mb-1">
                                    <h5 class="card-title my-3">@post.Title</h5>
                                </div>
                                <hr class="card-hr" />
                                <p class="card-text">@post.Abstract</p>
                                <img class="card-img-bottom" src="@_imageService.DecodeImage(post.ImageData, post.ContentType)" />
                            </a>
                        </div>
                        <div class="card-footer">
                            @{
                                string footerText = $"{post.Created.ToString("MMM dd, yyyy")} by Eric Phillips";
                            }
                            <p class="font-italic">Posted on <span class="font-weight-bold">@footerText</span></p>
                            @if (User.IsInRole(BlogRole.Administrator.ToString()) || isAuthor)
                            {
                                <div class="text-center">
                                    <a class="btn btn-success btn-sm btn-block border-dark" asp-action="Edit" asp-controller="Posts" asp-route-id="@post.Id">Edit Post</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="col-12 col-lg-3 text-center font-weight-bold h6">
        <!-- Sidebar Content -->
        <h2 class="text-center m-2 font-weight-bolder">Topics</h2>
        <hr />
        <ul class="text-center text-md-left mb-4 list-unstyled">
            @foreach (var blog in ViewBag.BlogList)
            {
                <a asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id" class="blogLink"><li class="rounded-pill p-2 mb-1">@blog.Name</li></a>
            }
        </ul>
        <hr />
        <div class="card">
            <img class="card-img-top" src="/img/tags.png" alt="Tags..." />
            <div class="card-body">
                @*<h4 class="card-title">SYSTEM TAGS</h4>*@
                <div class="tagView">
                    @foreach(var tag in ViewBag.Tags)
                    {
                        <a asp-action="TagIndex" asp-controller="Posts" asp-route-tag="@tag" class="mb-1 btn btn-sm btn-danger btn-outline-dark">#@tag</a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<hr />

@*Add paging controls here*@
 <div class="container">
     <div class="row">
         <div class="col h3">
             Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
         </div>
     </div>
     <div class="row">
         <div class="col">
             @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchTerm = ViewData["SearchTerm"] }), 
                new PagedListRenderOptions
                {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
         </div>
     </div>
</div>